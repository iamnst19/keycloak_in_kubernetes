apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: ingress-basic
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: ingress-basic
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - image: quay.io/keycloak/keycloak:12.0.3
        name: keycloak
        envFrom:
        - secretRef:
            name: keycloak_cred
        env:        
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: DB_ADDR
          value: keycloak-db-postgresql-ha-pgpool
        - name: DB_DATABASE
          value: postgres
        - name: DB_USER
          value: postgres
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-db-postgresql-ha-postgresql
              key: postgresql-password
        - name: DB_SCHEMA
          value: public
        - name: DB_VENDOR
          value: POSTGRES
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: dns.DNS_PING
        - name: JGROUPS_DISCOVERY_PROPERTIES
          value: 'dns_query=keycloak'
        - name: CACHE_OWNERS_COUNT
          value: "2"
        - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
          value: "2"
        ports:
        - containerPort: 8080
          name: keycloak
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
        
